>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided(4, 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats



>>> matrix_divided([4, 8], 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats



>>> matrix_divided([[4, 8], [7, 9]], 2)
[[2.0, 4.0], [3.5, 4.5]]



>>> matrix_divided([[4, 8], [7, 4]], 3)
[[1.33, 2.67], [2.33, 1.33]]



>>> matrix_divided([[4, 8], [7, 4, 6]], 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size



>>> matrix_divided([[4, 8], [7, "Amr"]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats



>>> matrix_divided([[4, 8]], 3)
[[1.33, 2.67]]



>>> matrix_divided([[4, 8], [7]], 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size



>>> matrix_divided([[4, [4, 6]], [7, 9]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats



>>> matrix_divided([[4, [6]], [7, 9]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats